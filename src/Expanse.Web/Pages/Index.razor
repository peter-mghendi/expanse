@page "/"   
@using Expanse.Web.Extensions.Models
@using Expanse.Web.Models
@inject SpaceXClient SpaceXClient

<PageTitle>Home | Expanse</PageTitle>

<div class="d-flex flex-column align-center mb-8">
    <MudIcon Icon="@Icons.TwoTone.SatelliteAlt" Size="Size.Large"/>
    <MudText Typo="Typo.h2" Align="Align.Center">Expanse</MudText>
    <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Some profound text here.</MudText>

    <MudContainer MaxWidth="MaxWidth.Medium" Class="mb-4">
        <MudTextField @bind-Value="_query" Label="Search" Variant="Variant.Outlined" Adornment="Adornment.End"
                      AdornmentIcon="@Icons.TwoTone.Search" AdornmentColor="Color.Primary" Class="mud-width-full"/>
    </MudContainer>
</div>

<Section Title="Rockets" Icon="@Icons.TwoTone.Rocket">
    <Template>
        @foreach (var rocket in _model.Rockets)
        {
            <RocketItem Rocket="rocket"></RocketItem>
        }
    </Template>
</Section>

@* <Section Title="Launches" Icon="@Icons.TwoTone.RocketLaunch"></Section> *@
@* *@
@* <Section Title="Missions" Icon="@Icons.TwoTone.Task"></Section> *@
@* *@
@* <Section Title="Ships" Icon="@Icons.TwoTone.DirectionsBoat"></Section> *@

@code
{
    private string? _query;

    private Model _model = new();

    protected override void OnInitialized()
    {
        _ = SpaceXClient.GetHomePageOverview.Watch(ExecutionStrategy.CacheFirst)
            .Where(result => !result.Errors.Any())
            .Select(result => result.Data)
            .Subscribe(data =>
            {
                _model = new Model
                {
                    Rockets = data?.Rockets?.Select(entity => entity.ToRocket()).ToList()!
                };
                StateHasChanged();
            });
    }

    public class Model
    {
        public List<Rocket> Rockets { get; init; } = new();
    }
}